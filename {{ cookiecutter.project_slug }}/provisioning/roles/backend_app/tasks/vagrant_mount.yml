---
{% raw -%}
# Tasks to be run when the backend_app code is made available on the target machine
# via a vagrant mount from the host machine (i.e. when using a dev VM).
#
# The Vagrantfile has been configured to sync the 'backend_app' folder on the host
# machine to the 'current' folder on the target machine, so we don't need to do anything
# else to make any code changes available on the target machine (compare to the tasks
# in 'run_deploy.yml').

- name: set deploy_helper facts needed by other tasks
  set_fact:
    backend_app_deploy_helper:
      new_release_path: "{{ backend_app_root }}/current"
      current_path: "{{ backend_app_root }}/current"

# Create a separate bind mount for the directory where the virtualenv is installed.
# It is desirable to have the virtualenv exist within the code directory with the
# deployment strategy used in 'run_deploy.yml', since rolling back by changing the
# 'current' symlink will roll back both the code and the virtualenv.
#
# However, running a virtualenv from within a vagrant mounted directory comes with
# a substantial performance impact, especially with the StatReloader as used by
# default when running django runserver.
#
# By creating a separate bind mount for the virtualenv folder we exclude its
# contents from the vagrant mount, thereby avoiding this performance impact.

- name: create directory for bind mount of virtualenv
  become: true
  file:
    path: "/home/{{ backend_app_user }}/venv"
    state: directory
    owner: "{{ backend_app_user }}"
    group: "{{ backend_app_group }}"

- name: create a bind mount from the venv directory to the vagrant synced directory
  mount:
    src: "/home/{{ backend_app_user }}/venv"
    path: "{{ backend_app_root }}/current/venv"
    opts: bind,noauto
    state: mounted
    fstype: none
{% endraw %}